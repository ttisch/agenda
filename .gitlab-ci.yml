image: ubuntu:22.04

stages:
  - build

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  RUSTUP_HOME: $CI_PROJECT_DIR/.rustup
  TAURI_PRIVATE_KEY: ${TAURI_PRIVATE_KEY}
  TAURI_KEY_PASSWORD: ${TAURI_KEY_PASSWORD}
  CARGO_TERM_COLOR: always
  CARGO_PATH: '/root/.cargo/bin:$PATH'

cache:
  paths:
    - .cargo
    - .rustup
    - target/
    - node_modules/
    - src-tauri/target/

windows-build:
  stage: build
  before_script:
    - apt-get update
    - apt-get install -y curl wget build-essential libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev mingw-w64 gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 nsis lld llvm
    # Download WebView2 Bootstrapper
    - wget https://go.microsoft.com/fwlink/p/?LinkId=2124703 -O src-tauri/WebView2.exe
    - curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
    - apt-get install -y nodejs
    - npm install -g yarn
    - yarn install
    # Install Rust with proper environment setup
    - mkdir -p $CARGO_HOME
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup-init.sh
    - sh rustup-init.sh -y --default-toolchain stable --profile minimal --no-modify-path
    - ls -la $CARGO_HOME/bin || echo "Cargo bin directory not found"
    - export PATH="$CARGO_HOME/bin:$PATH"
    - cargo --version || echo "cargo not found"
    - rustup --version || echo "rustup not found"
    - rustup target add x86_64-pc-windows-msvc
    - cargo install --locked cargo-xwin
    - yarn add --dev @tauri-apps/cli

  script:
    # Build the application
    - yarn build
    - yarn tauri build --runner cargo-xwin --target x86_64-pc-windows-msvc

  artifacts:
    paths:
      - src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
    expire_in: 1 week
